#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro

/ {
    combos {
        compatible = "zmk,combos";

        combo_undo {
            bindings = <&kp LC(Z)>;
            key-positions = <25 26>;
            layers = <0>;
            timeout-ms = <50>;
        };

        combo_cut {
            bindings = <&kp LC(X)>;
            key-positions = <26 27>;
            layers = <0>;
            timeout-ms = <50>;
        };

        combo_copy {
            bindings = <&kp LC(C)>;
            key-positions = <27 28>;
            layers = <0>;
            timeout-ms = <50>;
        };

        combo_paste {
            bindings = <&kp LC(V)>;
            key-positions = <15 28>;
            layers = <0>;
            timeout-ms = <50>;
        };

        combo_backspace {
            bindings = <&kp BSPC>;
            key-positions = <9 10>;
            layers = <0>;
            timeout-ms = <50>;
        };

        combo_enter {
            bindings = <&kp RET>;
            key-positions = <21 22>;
            layers = <0>;
            timeout-ms = <50>;
        };
    }; // End combo

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <135>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    }; // behaviors

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            //  --------------------------------------------------------
            //  |  ESC  |   Q   |   W   |   E   |   R   |   T   |   Y   |   U   |   I   |   O   |   P   |     BSPC     |
            //  |    Tab    |   A   |   S   |   D   |   F   |   G   |   H   |   J   |   K   |   L   |   :   |   Enter  |
            //  |     Shift    |   Z   |   X   |   C   |   V   |   B   |   N   |   M   |   ,   |   .   |  up   |   ?   |
            //  |    Ctrl   |    Alt    |    GUI    | lower | raise |     Space    |     fn    | left  | down  | right | 

            bindings = <
                &kp ESC    &kp Q    &kp W    &kp E  &kp R  &kp T      &kp Y  &kp U     &kp I     &kp O      &kp P      &kp BSPC  
                &kp TAB    &kp A    &kp S    &kp D  &kp F  &kp G      &kp H  &kp J     &kp K     &kp L      &kp SQT    &kp RET
                &kp LSHFT  &kp Z    &kp X    &kp C  &kp V  &kp B      &kp N  &kp M     AS(COMMA) &kp DOT    &kp UP     &kp FSLH  
                &kp LCTRL  &kp LALT &kp LGUI &mo 2  &mo 3             &kp SPACE        &mo 1     &kp LEFT   &kp DOWN   &kp RIGHT
            >;
        };

        bt_layer {
            bindings = <
                &bootloader &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &none  &none  &none  &none  &bt BT_CLR  
                &none       &none         &none         &none         &none         &none         &none  &none  &none  &none  &none  &none  
                &none       &none         &none         &none         &none         &none         &none  &none  &none  &none  &none  &none  
                &none       &none         &none         &none         &none                       &none         &none  &none  &none  &none
            >;
        };

        raise_layer {
            bindings = <
                &kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp MINUS
                &kp TAB    &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT     &kp CARET     &kp AMPS      &kp STAR      &kp LPAR      &kp RPAR      &kp SEMI  
                &kp LSHFT  &none         &none         &none         &none         &none         &kp LBKT      &kp RBKT      &kp EQUAL     &none         &none         &kp BSLH  
                &kp LCTRL  &kp LALT      &kp LGUI      &none         &none                       &none                       &none         &none         &none         &none
            >;
        };

        lower_layer {
            bindings = <
                &kp ESC    &none         &none         &none         &none         &none         &none         &none         &kp INS       &none   &kp PSCRN     &kp DEL  
                &kp TAB    &kp C_BRI_UP  &kp C_BRI_DN  &kp F3        &kp F4        &kp F5        &kp F6        &kp F7        &kp C_PLAY    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE  
                &kp LSHFT  &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &none  
                &kp LCTRL  &kp LALT      &kp LGUI      &none         &none                       &none                       &none         &none         &none         &none
            >;
        };
    };
};
